<svg id="main-canvas" width="1191" height="927" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" style="background-color: white" viewBox="-80.03021542740997 -24.227585485649346 1012.4642586762996 788.0389318160619"><defs id="SvgjsDefs1002"><script xmlns="http://www.w3.org/1999/xhtml">function $(id) { return document.getElementById(id) }</script><pattern width="0.00593708464472332" height="0.00593708464472332" id="1bGD2van_0" viewBox="0 0 10 10"><ellipse cx="5" cy="5" rx="2.5" transform-origin="5 5" transform="scale(0.8 0.8) rotate(0)" fill="black"><animateTransform attributeName="transform" attributeType="XML" type="scale" additive="sum" values="0.6 0.6 ;0.2 0.2 ;0.6 0.6 " dur="2.2" repeatCount="indefinite"/></ellipse></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="1bGD2van" transform="rotate(0 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#1bGD2van_0)" transform="translate(-226.6641763931782 -358.6641763931782)"/></g><pattern width="0.00593708464472332" height="0.00593708464472332" id="mEb90HXk_0" viewBox="0 0 10 10"><ellipse cx="5" cy="5" rx="2.5" transform-origin="5 5" transform="scale(0.8 0.8) rotate(0)" fill="black"><animateTransform attributeName="transform" attributeType="XML" type="scale" additive="sum" values="0.2 0.2 ;0.6 0.6 ;0.2 0.2 " dur="2.2" repeatCount="indefinite"/></ellipse></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="mEb90HXk" transform="rotate(0 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#mEb90HXk_0)" transform="translate(-241.6641763931782 -373.6641763931782)"/></g><pattern width="0.00831191850261265" height="0.00831191850261265" id="7PXUQNVd_0" viewBox="0 0 14 14"><ellipse cx="7" cy="7" rx="3.5" transform-origin="7 7" transform="scale(0.7142857142857143 0.7142857142857143) rotate(0)" fill="black"><animateTransform attributeName="transform" attributeType="XML" type="scale" additive="sum" values="0.42857142857142855 0.42857142857142855 ;1.1428571428571428 1.1428571428571428 ;0.42857142857142855 0.42857142857142855 " dur="1" repeatCount="indefinite"/></ellipse></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="7PXUQNVd" transform="rotate(15 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#7PXUQNVd_0)" transform="translate(-246.6641763931782 -378.6641763931782)"/></g><pattern width="0.00831191850261265" height="0.00831191850261265" id="rhyFH3x0_0" viewBox="0 0 14 14"><ellipse cx="7" cy="7" rx="3.5" transform-origin="7 7" transform="scale(0.7142857142857143 0.7142857142857143) rotate(0)" fill="black"><animateTransform attributeName="transform" attributeType="XML" type="scale" additive="sum" values="0.42857142857142855 0.42857142857142855 ;0.8571428571428571 0.8571428571428571 ;0.42857142857142855 0.42857142857142855 " dur="1" repeatCount="indefinite"/></ellipse></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="rhyFH3x0" transform="rotate(15 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#rhyFH3x0_0)" transform="translate(-239.6641763931782 -371.6641763931782)"/></g><pattern width="0.0035622507868339924" height="0.0296854232236166" id="G79Oyy0V_0" viewBox="0 0 6 50"><rect x="1.5" y="12.5" width="3" height="25" transform-origin="3 25" transform="scale(0.3333333333333333 2) rotate(0)" fill="black"/></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="G79Oyy0V" transform="rotate(115 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#G79Oyy0V_0)" transform="translate(-246.6641763931782 -378.6641763931782)"><animateTransform attributeName="transform" attributeType="XML" type="translate" values="-245.6641763931782 -378.6641763931782;-242.6641763931782 -378.6641763931782;-245.6641763931782 -378.6641763931782" dur="0.5" repeatCount="indefinite"/></path></g><pattern width="0.0035622507868339924" height="0.0296854232236166" id="YgXjnwUC_0" viewBox="0 0 6 50"><rect x="1.5" y="12.5" width="3" height="25" transform-origin="3 25" transform="scale(0.3333333333333333 2) rotate(0)" fill="black"/></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="YgXjnwUC" transform="rotate(70 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#YgXjnwUC_0)" transform="translate(-246.6641763931782 -378.6641763931782)"/></g><pattern width="0.002374833857889328" height="0.0296854232236166" id="tGLVnRYU_0" viewBox="0 0 4 50"><rect x="1" y="12.5" width="2" height="25" transform-origin="2 25" transform="scale(1 2) rotate(0)" fill="black"/></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="tGLVnRYU" transform="rotate(305 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#tGLVnRYU_0)" transform="translate(-246.6641763931782 -378.6641763931782)"><animateTransform attributeName="transform" attributeType="XML" type="translate" values="-241.6641763931782 -378.6641763931782;-245.6641763931782 -378.6641763931782" dur="1" repeatCount="indefinite"/></path></g><pattern width="0.010686752360501976" height="0.011280460824974308" id="vhGSOiZu_0" viewBox="0 0 18 19"><path d="&#10;            M9 7.125,&#10;            L12.897114317029974 14.25,&#10;            L5.102885682970026 14.25,&#10;            L9 7.125,&#10;        " transform-origin="9 9.5" transform="scale(2.6666666666666665 2.6315789473684212) rotate(undefined)" fill="black"><animateTransform attributeName="transform" attributeType="XML" type="scale" additive="sum" values="0.1111111111111111 2.6315789473684212;3.2222222222222223 2.6315789473684212;0.1111111111111111 2.6315789473684212" dur="7.9" repeatCount="indefinite"/></path></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="vhGSOiZu" transform="rotate(200 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#vhGSOiZu_0)" transform="translate(-246.6641763931782 -378.6641763931782)"/></g><pattern width="0.01721754546969763" height="0.022560921649948617" id="lkPaHDQX_0" viewBox="0 0 29 38"><path d="&#10;            M14.5 14.25,&#10;            L20.778684177437178 28.5,&#10;            L8.22131582256282 28.5,&#10;            L14.5 14.25,&#10;        " transform-origin="14.5 19" transform="scale(1.6551724137931034 1.3157894736842106) rotate(undefined)" fill="black"/></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="lkPaHDQX" transform="rotate(240 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#lkPaHDQX_0)" transform="translate(-230.6641763931782 -358.6641763931782)"/></g><pattern width="0.00593708464472332" height="0.00593708464472332" id="GpKv51QM_0" viewBox="0 0 10 10"><ellipse cx="5" cy="5" rx="2.5" transform-origin="5 5" transform="scale(0.8 0.8) rotate(0)" fill="black"><animateTransform attributeName="transform" attributeType="XML" type="scale" additive="sum" values="0.6 0.6 ;0.2 0.2 ;0.6 0.6 " dur="2.2" repeatCount="indefinite"/></ellipse></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="GpKv51QM" transform="rotate(0 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#GpKv51QM_0)" transform="translate(-226.6641763931782 -358.6641763931782)"/></g><pattern width="0.00593708464472332" height="0.00593708464472332" id="0chRrWlA_0" viewBox="0 0 10 10"><ellipse cx="5" cy="5" rx="2.5" transform-origin="5 5" transform="scale(0.8 0.8) rotate(0)" fill="black"><animateTransform attributeName="transform" attributeType="XML" type="scale" additive="sum" values="0.2 0.2 ;0.6 0.6 ;0.2 0.2 " dur="2.2" repeatCount="indefinite"/></ellipse></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="0chRrWlA" transform="rotate(0 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#0chRrWlA_0)" transform="translate(-241.6641763931782 -373.6641763931782)"/></g><pattern width="0.00593708464472332" height="0.00593708464472332" id="1bGD2van_0" viewBox="0 0 10 10"><ellipse cx="5" cy="5" rx="2.5" transform-origin="5 5" transform="scale(0.8 0.8) rotate(0)" fill="black"><animateTransform attributeName="transform" attributeType="XML" type="scale" additive="sum" values="0.6 0.6 ;0.2 0.2 ;0.6 0.6 " dur="2.2" repeatCount="indefinite"/></ellipse></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="1bGD2van" transform="rotate(0 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#1bGD2van_0)" transform="translate(-226.6641763931782 -358.6641763931782)"/></g><pattern width="0.00593708464472332" height="0.00593708464472332" id="mEb90HXk_0" viewBox="0 0 10 10"><ellipse cx="5" cy="5" rx="2.5" transform-origin="5 5" transform="scale(0.8 0.8) rotate(0)" fill="black"><animateTransform attributeName="transform" attributeType="XML" type="scale" additive="sum" values="0.2 0.2 ;0.6 0.6 ;0.2 0.2 " dur="2.2" repeatCount="indefinite"/></ellipse></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="mEb90HXk" transform="rotate(0 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#mEb90HXk_0)" transform="translate(-241.6641763931782 -373.6641763931782)"/></g><pattern width="0.00831191850261265" height="0.00831191850261265" id="7PXUQNVd_0" viewBox="0 0 14 14"><ellipse cx="7" cy="7" rx="3.5" transform-origin="7 7" transform="scale(0.7142857142857143 0.7142857142857143) rotate(0)" fill="black"><animateTransform attributeName="transform" attributeType="XML" type="scale" additive="sum" values="0.42857142857142855 0.42857142857142855 ;1.1428571428571428 1.1428571428571428 ;0.42857142857142855 0.42857142857142855 " dur="1" repeatCount="indefinite"/></ellipse></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="7PXUQNVd" transform="rotate(15 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#7PXUQNVd_0)" transform="translate(-246.6641763931782 -378.6641763931782)"/></g><pattern width="0.00831191850261265" height="0.00831191850261265" id="rhyFH3x0_0" viewBox="0 0 14 14"><ellipse cx="7" cy="7" rx="3.5" transform-origin="7 7" transform="scale(0.7142857142857143 0.7142857142857143) rotate(0)" fill="black"><animateTransform attributeName="transform" attributeType="XML" type="scale" additive="sum" values="0.42857142857142855 0.42857142857142855 ;0.8571428571428571 0.8571428571428571 ;0.42857142857142855 0.42857142857142855 " dur="1" repeatCount="indefinite"/></ellipse></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="rhyFH3x0" transform="rotate(15 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#rhyFH3x0_0)" transform="translate(-239.6641763931782 -371.6641763931782)"/></g><pattern width="0.0035622507868339924" height="0.0296854232236166" id="G79Oyy0V_0" viewBox="0 0 6 50"><rect x="1.5" y="12.5" width="3" height="25" transform-origin="3 25" transform="scale(0.3333333333333333 2) rotate(0)" fill="black"/></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="G79Oyy0V" transform="rotate(115 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#G79Oyy0V_0)" transform="translate(-246.6641763931782 -378.6641763931782)"><animateTransform attributeName="transform" attributeType="XML" type="translate" values="-245.6641763931782 -378.6641763931782;-242.6641763931782 -378.6641763931782;-245.6641763931782 -378.6641763931782" dur="0.5" repeatCount="indefinite"/></path></g><pattern width="0.0035622507868339924" height="0.0296854232236166" id="YgXjnwUC_0" viewBox="0 0 6 50"><rect x="1.5" y="12.5" width="3" height="25" transform-origin="3 25" transform="scale(0.3333333333333333 2) rotate(0)" fill="black"/></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="YgXjnwUC" transform="rotate(70 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#YgXjnwUC_0)" transform="translate(-246.6641763931782 -378.6641763931782)"/></g><pattern width="0.010686752360501976" height="0.011280460824974308" id="vhGSOiZu_0" viewBox="0 0 18 19"><path d="&#10;            M9 7.125,&#10;            L12.897114317029974 14.25,&#10;            L5.102885682970026 14.25,&#10;            L9 7.125,&#10;        " transform-origin="9 9.5" transform="scale(2.6666666666666665 2.6315789473684212) rotate(undefined)" fill="black"><animateTransform attributeName="transform" attributeType="XML" type="scale" additive="sum" values="0.1111111111111111 2.6315789473684212;3.2222222222222223 2.6315789473684212;0.1111111111111111 2.6315789473684212" dur="7.9" repeatCount="indefinite"/></path></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="vhGSOiZu" transform="rotate(200 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#vhGSOiZu_0)" transform="translate(-246.6641763931782 -378.6641763931782)"/></g><pattern width="0.01721754546969763" height="0.022560921649948617" id="lkPaHDQX_0" viewBox="0 0 29 38"><path d="&#10;            M14.5 14.25,&#10;            L20.778684177437178 28.5,&#10;            L8.22131582256282 28.5,&#10;            L14.5 14.25,&#10;        " transform-origin="14.5 19" transform="scale(1.6551724137931034 1.3157894736842106) rotate(undefined)" fill="black"/></pattern><g width="1684.3283527863564" height="1684.3283527863564" id="lkPaHDQX" transform="rotate(240 595.5 463.5)"><path d="M 0 0,l 1684.3283527863564 0,l 0 1684.3283527863564,l -1684.3283527863564 0,l 0 -1684.3283527863564" fill="url(#lkPaHDQX_0)" transform="translate(-230.6641763931782 -358.6641763931782)"/></g></defs><g id="sketchGroup" transform="matrix(1,0,0,1,595.5,463.5)"><g id="layer2" depth="1" transform="matrix(1 0 0 1 284.28735585096774 -278.638866844853)" separatedTransform="284.28735585096774,-278.638866844853,1,1,0,0,1,1"><path id="SvgjsPolyline1213" d="M-446.96 -3.18 C -451.80 -1.85,-468.67 3.27,-484.46 8.19 C -569.76 34.79,-650.54 52.63,-652.16 45.22 C -655.11 31.79,-676.76 31.71,-682.36 45.11 C -685.73 53.18,-689.15 160.30,-686.28 168.08 C -680.31 184.28,-655.33 183.15,-569.18 162.79 C -513.17 149.56,-470.16 143.73,-420.64 142.67 C -388.55 141.99,-386.30 141.12,-382.59 128.07 C -379.52 117.28,-379.37 118.66,-387.11 88.27 C -389.15 80.29,-393.70 61.17,-397.22 45.77 C -405.50 9.67,-406.25 7.66,-414.04 0.87 C -422.01 -6.07,-431.99 -7.30,-446.96 -3.18 M-435.14 31.09 C -435.93 31.88,-437.65 30.08,-437.04 29.09 C -436.63 28.42,-436.11 28.52,-435.58 29.38 C -435.13 30.11,-434.93 30.88,-435.14 31.09 M-416.65 108.27 C -416.65 108.82,-417.66 109.26,-418.90 109.25 C -420.72 109.24,-420.86 109.05,-419.65 108.27 C -417.71 107.01,-416.65 107.01,-416.65 108.27 " fill-opacity="1" fill="#83b7c1" potraced="yes" filter="url(#splotchy-flickering)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" opacity="1"/></g><g id="layer4" depth="1" transform="matrix(1 0 0 1 287.5881189738826 -288.8732249382368)" separatedTransform="287.5881189738826,-288.8732249382368,1,1,0,0,1,1"><path id="SvgjsPolyline1267" d="M-378.15 45.68 C -380.35 46.38,-389.52 50.65,-398.52 55.17 C -413.79 62.85,-415.77 63.56,-428.02 65.90 C -450.12 70.12,-460.46 72.87,-477.84 79.18 C -500.53 87.41,-516.09 90.53,-532.31 90.09 C -539.00 89.91,-543.95 90.10,-543.31 90.50 C -542.59 90.96,-542.55 91.24,-543.21 91.25 C -543.79 91.26,-545.14 90.61,-546.21 89.80 C -550.60 86.48,-562.20 88.90,-566.15 93.96 C -566.70 94.67,-569.42 95.67,-572.20 96.19 C -595.22 100.51,-603.71 115.61,-602.33 149.77 C -601.03 181.76,-592.57 201.43,-578.09 206.08 C -570.10 208.65,-536.05 209.56,-483.15 208.63 C -428.66 207.66,-417.95 208.12,-396.65 212.27 C -390.88 213.40,-380.30 214.71,-373.15 215.17 C -365.67 215.66,-358.45 216.70,-356.15 217.60 C -330.86 227.57,-320.04 202.47,-332.59 162.95 C -341.44 135.09,-346.46 87.72,-341.57 78.33 C -331.17 58.37,-354.02 37.98,-378.15 45.68 M-558.65 131.19 C -564.46 132.94,-566.65 133.26,-566.65 132.35 C -566.65 131.40,-563.30 130.62,-558.65 130.50 C -556.15 130.44,-556.15 130.44,-558.65 131.19 M-450.92 138.87 C -451.25 139.20,-452.12 139.24,-452.84 138.95 C -453.64 138.63,-453.40 138.39,-452.23 138.35 C -451.18 138.30,-450.59 138.54,-450.92 138.87 M-455.98 139.93 C -456.35 140.30,-456.95 140.30,-457.32 139.93 C -457.68 139.57,-457.38 139.27,-456.65 139.27 C -455.92 139.27,-455.62 139.57,-455.98 139.93 " fill-opacity="1" fill="#e4dae8" potraced="yes" filter="url(#splotchy-flickering)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" opacity="1"/></g><g id="layer5" depth="1" transform="matrix(1 0 0 1 283.64978389966024 -285.50604807039406)" separatedTransform="283.64978389966024,-285.50604807039406,1,1,0,0,1,1"><path id="SvgjsPolyline1308" d="M-515.15 4.45 C -537.93 12.08,-574.52 21.27,-590.17 23.28 C -608.13 25.60,-628.39 28.87,-633.65 30.32 C -635.58 30.84,-647.05 32.19,-659.15 33.30 C -696.24 36.71,-698.71 37.94,-695.18 51.20 C -693.67 56.89,-692.13 58.43,-687.15 59.27 C -684.17 59.78,-684.18 59.80,-689.80 63.04 C -701.61 69.86,-705.65 77.46,-699.12 80.58 C -691.04 84.44,-672.35 80.68,-634.90 67.67 C -602.47 56.40,-577.44 50.19,-544.65 45.27 C -516.60 41.05,-513.14 40.06,-512.10 35.93 C -511.58 33.84,-509.92 33.25,-494.84 29.79 C -448.65 19.19,-440.90 15.79,-446.33 8.49 C -448.84 5.10,-452.16 4.69,-464.15 6.26 C -472.97 7.41,-502.04 12.80,-505.43 13.92 C -506.38 14.23,-505.75 13.58,-504.03 12.47 C -498.50 8.90,-498.67 3.32,-504.32 3.28 C -505.51 3.27,-506.63 2.93,-506.82 2.52 C -507.00 2.10,-510.75 2.97,-515.15 4.45 M-598.15 41.31 C -603.65 42.90,-608.60 44.17,-609.15 44.14 C -611.12 44.01,-593.10 38.46,-590.65 38.45 C -589.28 38.43,-592.65 39.73,-598.15 41.31 M-610.98 44.93 C -611.35 45.30,-611.95 45.30,-612.32 44.93 C -612.68 44.57,-612.38 44.27,-611.65 44.27 C -610.92 44.27,-610.62 44.57,-610.98 44.93 M-613.92 45.87 C -614.25 46.20,-615.12 46.24,-615.84 45.95 C -616.64 45.63,-616.40 45.39,-615.23 45.35 C -614.18 45.30,-613.59 45.54,-613.92 45.87 M-680.98 46.93 C -681.35 47.30,-681.95 47.30,-682.32 46.93 C -682.68 46.57,-682.38 46.27,-681.65 46.27 C -680.92 46.27,-680.62 46.57,-680.98 46.93 M-683.92 47.87 C -684.25 48.20,-685.12 48.24,-685.84 47.95 C -686.64 47.63,-686.40 47.39,-685.23 47.35 C -684.18 47.30,-683.59 47.54,-683.92 47.87 " fill-opacity="1" fill="#b8e986" potraced="yes" filter="url(#crosshatching-sideshuffle)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" opacity="1"/><path id="SvgjsPolyline1312" d="M-338.15 160.20 C -345.62 163.88,-353.16 170.10,-371.65 187.86 C -379.63 195.52,-388.25 203.47,-390.82 205.53 C -397.27 210.70,-400.04 215.39,-399.22 219.77 C -398.06 225.93,-393.19 224.92,-384.65 216.75 C -381.63 213.86,-378.10 210.95,-376.80 210.29 C -373.42 208.56,-363.02 205.07,-364.18 206.05 C -364.71 206.50,-368.34 209.43,-372.23 212.55 C -387.35 224.66,-392.13 231.64,-388.08 235.70 C -385.24 238.53,-382.38 237.48,-375.65 231.11 C -362.36 218.53,-339.36 201.88,-327.54 196.29 C -324.02 194.63,-321.24 192.93,-321.36 192.52 C -321.47 192.11,-320.21 190.37,-318.56 188.67 C -315.56 185.58,-315.56 185.58,-319.86 183.93 C -324.14 182.30,-324.27 182.32,-340.66 186.77 C -349.73 189.24,-357.38 191.24,-357.65 191.22 C -359.83 191.02,-339.94 174.59,-333.84 171.55 C -326.56 167.92,-324.64 166.04,-324.67 162.58 C -324.71 157.11,-330.00 156.18,-338.15 160.20 " fill-opacity="1" fill="#ebd4e8" potraced="yes" filter="url(#crosshatching-sideshuffle)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" opacity="1"/></g><g id="layer6" depth="1" style="" transform="matrix(1 0 0 1 287.4353673605485 -289.9358448570826)" separatedTransform="287.4353673605485,-289.9358448570826,1,1,0,0,1,1"><path id="SvgjsPolyline1323" d="M-702.32 134.83 C -716.42 142.44,-722.64 152.68,-722.65 168.34 C -722.67 209.79,-670.71 224.88,-649.22 189.67 C -628.18 155.19,-666.55 115.54,-702.32 134.83 " fill-opacity="1" fill="#4a90e2" potraced="yes" filter="url(#screentone-fine-pulsing)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" opacity="1"/><path id="SvgjsPolyline1333" d="M-358.65 16.83 C -359.48 17.01,-363.39 17.67,-367.34 18.29 C -400.58 23.54,-404.07 72.89,-372.04 84.67 C -363.57 87.79,-349.66 87.32,-344.02 83.73 C -329.08 74.23,-323.48 63.33,-325.55 47.79 C -326.83 38.16,-327.44 36.84,-334.56 28.20 C -338.61 23.29,-353.45 15.39,-356.76 16.38 C -356.98 16.45,-357.83 16.65,-358.65 16.83 " fill-opacity="1" fill="#ef174d" potraced="yes" filter="url(#screentone-fine-pulsing)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" opacity="1"/></g><g id="layer7" depth="1" transform="matrix(0.9899715245158939 0 0 0.9899715245158939 281.67397498805633 -291.4834774962863)" separatedTransform="281.67397498805633,-291.4834774962863,0.9899715245158939,0.9899715245158939,0,0,1,1"><path id="SvgjsPath1060" d="M-608.13 83.69 C -611.41 87.73,-615.50 93.57,-617.21 96.66 C -620.25 102.13,-620.35 102.22,-621.43 99.85 C -623.22 95.92,-635.71 83.27,-637.80 83.27 C -641.90 83.27,-640.87 86.30,-634.26 93.69 C -627.61 101.11,-623.71 107.85,-623.67 111.98 C -623.64 115.47,-620.14 116.80,-618.21 114.05 C -617.35 112.82,-616.65 111.08,-616.65 110.18 C -616.65 106.69,-609.17 93.82,-603.71 87.94 C -597.39 81.12,-596.26 79.06,-597.93 77.39 C -600.15 75.17,-602.25 76.46,-608.13 83.69 " fill-opacity="1" fill="#84a175" filter="url(#pen-wiggly)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" potraced="yes" opacity="1"/><path id="SvgjsPath1059" d="M-622.49 111.57 C -625.55 115.26,-626.93 145.17,-624.21 148.83 C -620.67 153.59,-619.52 149.90,-619.22 132.77 C -619.06 123.97,-618.60 115.79,-618.20 114.60 C -617.28 111.91,-620.74 109.46,-622.49 111.57 " fill-opacity="1" fill="#84a175" filter="url(#pen-wiggly)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" potraced="yes" opacity="1"/><path id="SvgjsPath1058" d="M-595.15 119.61 C -597.23 124.00,-606.41 134.27,-608.25 134.27 C -610.17 134.27,-609.18 130.17,-605.88 124.45 C -604.17 121.50,-603.71 119.81,-604.41 119.11 C -608.92 114.60,-617.88 132.15,-614.07 138.02 C -611.55 141.89,-605.78 141.13,-600.77 136.27 C -595.87 131.51,-595.65 131.46,-595.65 135.04 C -595.65 139.39,-593.08 142.27,-589.20 142.27 C -583.91 142.27,-582.74 137.13,-587.65 135.42 C -590.99 134.26,-591.11 133.63,-589.69 124.98 C -588.21 115.94,-591.75 112.46,-595.15 119.61 " fill-opacity="1" fill="#84a175" filter="url(#pen-wiggly)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" potraced="yes" opacity="1"/><path id="SvgjsPath1057" d="M-565.15 76.52 C -565.39 77.21,-568.25 85.19,-571.51 94.27 C -580.32 118.83,-586.76 139.82,-586.06 141.65 C -584.77 145.01,-581.38 143.00,-580.16 138.15 C -579.44 135.29,-574.05 128.27,-572.58 128.27 C -572.07 128.27,-571.65 130.65,-571.65 133.57 C -571.65 139.71,-570.51 141.27,-566.00 141.27 C -559.24 141.27,-553.66 135.83,-556.99 132.50 C -558.25 131.24,-558.83 131.34,-561.53 133.34 C -565.34 136.15,-565.63 135.88,-566.36 128.80 C -566.98 122.77,-569.85 119.36,-573.21 120.65 C -575.13 121.39,-575.48 122.58,-566.38 96.92 C -560.61 80.66,-559.59 76.92,-560.74 76.19 C -562.75 74.92,-564.64 75.06,-565.15 76.52 " fill-opacity="1" fill="#84a175" filter="url(#pen-wiggly)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" potraced="yes" opacity="1"/><path id="SvgjsPath1056" d="M-555.88 115.23 C -560.76 119.07,-562.16 132.84,-558.11 137.31 C -554.59 141.21,-549.48 139.13,-544.94 131.93 C -542.35 127.84,-542.29 127.81,-541.63 130.27 C -539.62 137.74,-535.34 141.93,-533.00 138.72 C -532.02 137.39,-532.19 136.29,-533.90 133.02 C -535.06 130.79,-536.21 126.57,-536.45 123.64 C -536.95 117.67,-538.79 115.25,-541.52 116.96 C -542.86 117.79,-543.83 117.51,-546.00 115.65 C -549.36 112.75,-552.56 112.62,-555.88 115.23 M-548.85 122.52 C -548.17 125.10,-548.43 126.44,-550.07 129.01 C -553.05 133.65,-554.65 133.19,-554.65 127.70 C -554.65 119.68,-550.56 116.02,-548.85 122.52 " fill-opacity="1" fill="#84a175" filter="url(#pen-wiggly)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" potraced="yes" opacity="1"/><path id="SvgjsPath1055" d="M-525.54 111.52 C -535.48 138.15,-536.30 141.65,-532.48 141.09 C -530.96 140.86,-529.35 138.88,-527.08 134.44 C -523.45 127.32,-520.47 123.76,-516.32 121.61 C -513.49 120.13,-513.49 120.13,-514.20 129.19 C -515.01 139.57,-514.30 141.27,-509.11 141.27 C -503.10 141.27,-496.62 133.37,-501.19 131.61 C -502.03 131.29,-503.50 131.69,-504.44 132.49 C -508.74 136.19,-508.86 135.99,-508.11 126.39 C -507.16 114.29,-510.10 111.34,-518.68 115.78 C -521.61 117.30,-521.61 117.30,-520.59 114.61 C -520.03 113.13,-519.80 111.33,-520.08 110.60 C -520.91 108.42,-524.62 109.04,-525.54 111.52 " fill-opacity="1" fill="#84a175" filter="url(#pen-wiggly)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" potraced="yes" opacity="1"/><path id="SvgjsPath1054" d="M-430.07 78.52 C -430.27 79.21,-431.38 84.53,-432.54 90.35 C -436.22 108.84,-444.75 132.20,-447.84 132.26 C -451.11 132.31,-456.92 111.97,-458.19 96.04 C -459.56 78.84,-463.81 81.73,-466.68 101.82 C -471.21 133.47,-475.25 133.99,-478.02 103.28 C -479.14 90.90,-479.18 90.77,-481.65 90.77 C -485.52 90.77,-483.75 118.92,-479.19 129.82 C -475.38 138.94,-463.27 127.66,-462.57 114.34 C -462.52 113.47,-461.40 116.20,-460.08 120.39 C -450.41 150.99,-437.70 140.93,-427.06 94.27 C -423.85 80.17,-423.87 77.27,-427.18 77.27 C -428.58 77.27,-429.87 77.83,-430.07 78.52 " fill-opacity="1" fill="#7598a1" filter="url(#pen-wiggly)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" potraced="yes" opacity="1"/><path id="SvgjsPath1053" d="M-453.15 131.19 C -479.05 137.81,-519.42 151.90,-539.15 161.20 C -550.48 166.54,-552.27 168.05,-550.37 170.64 C -549.22 172.21,-548.08 171.86,-536.63 166.41 C -529.77 163.15,-515.83 157.49,-505.65 153.84 C -495.48 150.19,-486.21 146.81,-485.06 146.33 C -478.07 143.41,-443.06 133.96,-441.35 134.53 C -440.75 134.73,-443.72 137.46,-447.96 140.58 C -452.19 143.71,-459.03 148.76,-463.15 151.81 C -474.57 160.24,-472.87 163.37,-459.26 158.96 C -426.96 148.47,-335.66 138.31,-273.25 138.25 C -256.51 138.24,-254.21 137.79,-254.81 134.65 C -256.19 127.48,-392.26 137.50,-441.04 148.35 C -452.30 150.86,-452.35 151.15,-440.07 141.97 C -431.11 135.27,-429.65 133.77,-429.65 131.33 C -429.65 126.07,-433.08 126.05,-453.15 131.19 " fill-opacity="1" fill="#7598a1" filter="url(#pen-wiggly)" transform="matrix(0.8500959350766579,0,0,0.8500959350766579,0,0)" potraced="yes" opacity="1"/></g></g><image xlink:href="" id="portal-preview-transition" alt="transition preview for waypoint portal" style="x: 0px; y: 0px; width: 1px; height: 1px; display: none;"/><filter xmlns="http://www.w3.org/2000/svg" id="screentone-fine-pulsing"><feImage id="SvgjsFeImage1785" cellheight="4" cellwidth="4" dx="10" dy="10" filtername="feImage" href="#1bGD2van" patterntype="grid" result="BcGV3I" rotation="0" sx="20" sy="20" type="turbulence" unitrot="0" unittype="circle"><animate id="SvgjsAnimate1786" attributeName="cellwidth" dur="2.2" values="3;1;3" attributeType="XML" repeatCount="indefinite"/><animate id="SvgjsAnimate1787" attributeName="cellheight" dur="2.2" values="3;1;3" attributeType="XML" repeatCount="indefinite"/></feImage><feImage id="SvgjsFeImage1788" cellheight="4" cellwidth="4" dx="10" dy="10" filtername="feImage" href="#mEb90HXk" patterntype="grid" result="pe2jcK" rotation="0" sx="5" sy="5" type="turbulence" unitrot="0" unittype="circle"><animate id="SvgjsAnimate1789" attributeName="cellwidth" dur="2.2" values="1;3;1" attributeType="XML" repeatCount="indefinite"/><animate id="SvgjsAnimate1790" attributeName="cellheight" dur="2.2" values="1;3;1" attributeType="XML" repeatCount="indefinite"/></feImage><feComposite id="SvgjsFeComposite1791" filtername="feComposite" in="pe2jcK" in2="BcGV3I" operator="over" result="1iiEfs"/><feComposite id="SvgjsFeComposite1792" filtername="feComposite" in="SourceGraphic" in2="1iiEfs" operator="in" result="yezH8r"/></filter><filter xmlns="http://www.w3.org/2000/svg" id="splotchy-flickering"><feTurbulence id="SvgjsFeTurbulence1856" baseFrequency="0.25 0.209" filtername="feTurbulence" numOctaves="8" result="nTLuQM" seed="0" stitchTiles="noStitch" type="fractalNoise"/><feComponentTransfer id="SvgjsFeComponentTransfer1857" filtername="feComponentTransfer" in="nTLuQM" result="irk8Sm"><feFuncR id="SvgjsFeFuncR1858" filtername="feFuncR" intercept="0.1" slope="0.1" type="linear"/><feFuncG id="SvgjsFeFuncG1859" filtername="feFuncG" intercept="0.1" slope="0.1" type="linear"/><feFuncB id="SvgjsFeFuncB1860" filtername="feFuncB" intercept="0.1" slope="0.1" type="linear"/></feComponentTransfer><feMorphology id="SvgjsFeMorphology1861" filtername="feMorphology" in="irk8Sm" operator="erode" radius="6" result="HyN6vt"><animate id="SvgjsAnimate1862" attributeName="radius" dur="0.5" values="4;5;4" attributeType="XML" repeatCount="indefinite"/></feMorphology><feConvolveMatrix id="SvgjsFeConvolveMatrix1863" filtername="feConvolveMatrix" in="HyN6vt" kernelMatrix="0 -1 0 -1 5 -1 0 -1 0" result="tTZHfY"/><feComposite id="SvgjsFeComposite1864" filtername="feComposite" in="SourceGraphic" in2="tTZHfY" operator="in" result="gAuK3e"/><feComposite id="SvgjsFeComposite1865" filtername="feComposite" in="gAuK3e" in2="gAuK3e" operator="over" result="CvTrwW"/></filter><filter xmlns="http://www.w3.org/2000/svg" id="crosshatching-sideshuffle"><feImage id="SvgjsFeImage1868" cellheight="50" cellwidth="1" dx="6" dy="50" filtername="feImage" href="#G79Oyy0V" patterntype="grid" result="4YBZ9R" rotation="115" sx="0" sy="0" type="turbulence" unitrot="0" unittype="square"><animate id="SvgjsAnimate1869" attributeName="sx" dur="0.5" values="1;4;1" attributeType="XML" repeatCount="indefinite"/></feImage><feImage id="SvgjsFeImage1870" cellheight="50" cellwidth="1" dx="6" dy="50" filtername="feImage" href="#YgXjnwUC" patterntype="grid" result="yITyeQ" rotation="70" sx="0" sy="0" type="turbulence" unitrot="0" unittype="square"/><feComposite id="SvgjsFeComposite1871" filtername="feComposite" in="yITyeQ" in2="4YBZ9R" operator="over" result="ppWoID"/><feComposite id="SvgjsFeComposite1872" filtername="feComposite" in="SourceGraphic" in2="ppWoID" operator="in" result="6FzKUP"/></filter><filter xmlns="http://www.w3.org/2000/svg" id="pen-wiggly"><feTurbulence id="SvgjsFeTurbulence2058" baseFrequency="0.1 0.1" filtername="feTurbulence" numOctaves="1" result="2clDB1" seed="0" stitchTiles="noStitch" type="turbulence" animation="{&quot;baseFrequency&quot;:&quot;{\&quot;attributeName\&quot;:\&quot;baseFrequency\&quot;,\&quot;dur\&quot;:\&quot;9\&quot;,\&quot;values\&quot;:\&quot;0.108 0.092;0.048 0.053;0.1 0.1\&quot;}&quot;}"><animate attributeName="baseFrequency" dur="9" values="0.108 0.092;0.048 0.053;0.1 0.1" attributeType="XML" repeatCount="indefinite"/></feTurbulence><feDisplacementMap id="SvgjsFeDisplacementMap2060" filtername="feDisplacementMap" in="SourceGraphic" in2="2clDB1" result="1Pf3G7" scale="3" xChannelSelector="R" yChannelSelector="G"/></filter><filter xmlns="http://www.w3.org/2000/svg" id="screentone-fine-pulsing"><feImage id="SvgjsFeImage1785" cellheight="4" cellwidth="4" dx="10" dy="10" filtername="feImage" href="#1bGD2van" patterntype="grid" result="BcGV3I" rotation="0" sx="20" sy="20" type="turbulence" unitrot="0" unittype="circle"><animate id="SvgjsAnimate1786" attributeName="cellwidth" dur="2.2" values="3;1;3" attributeType="XML" repeatCount="indefinite"/><animate id="SvgjsAnimate1787" attributeName="cellheight" dur="2.2" values="3;1;3" attributeType="XML" repeatCount="indefinite"/></feImage><feImage id="SvgjsFeImage1788" cellheight="4" cellwidth="4" dx="10" dy="10" filtername="feImage" href="#mEb90HXk" patterntype="grid" result="pe2jcK" rotation="0" sx="5" sy="5" type="turbulence" unitrot="0" unittype="circle"><animate id="SvgjsAnimate1789" attributeName="cellwidth" dur="2.2" values="1;3;1" attributeType="XML" repeatCount="indefinite"/><animate id="SvgjsAnimate1790" attributeName="cellheight" dur="2.2" values="1;3;1" attributeType="XML" repeatCount="indefinite"/></feImage><feComposite id="SvgjsFeComposite1791" filtername="feComposite" in="pe2jcK" in2="BcGV3I" operator="over" result="1iiEfs"/><feComposite id="SvgjsFeComposite1792" filtername="feComposite" in="SourceGraphic" in2="1iiEfs" operator="in" result="yezH8r"/></filter><filter xmlns="http://www.w3.org/2000/svg" id="splotchy-flickering"><feTurbulence id="SvgjsFeTurbulence1856" baseFrequency="0.25 0.209" filtername="feTurbulence" numOctaves="8" result="nTLuQM" seed="0" stitchTiles="noStitch" type="fractalNoise"/><feComponentTransfer id="SvgjsFeComponentTransfer1857" filtername="feComponentTransfer" in="nTLuQM" result="irk8Sm"><feFuncR id="SvgjsFeFuncR1858" filtername="feFuncR" intercept="0.1" slope="0.1" type="linear"/><feFuncG id="SvgjsFeFuncG1859" filtername="feFuncG" intercept="0.1" slope="0.1" type="linear"/><feFuncB id="SvgjsFeFuncB1860" filtername="feFuncB" intercept="0.1" slope="0.1" type="linear"/></feComponentTransfer><feMorphology id="SvgjsFeMorphology1861" filtername="feMorphology" in="irk8Sm" operator="erode" radius="6" result="HyN6vt"><animate id="SvgjsAnimate1862" attributeName="radius" dur="0.5" values="4;5;4" attributeType="XML" repeatCount="indefinite"/></feMorphology><feConvolveMatrix id="SvgjsFeConvolveMatrix1863" filtername="feConvolveMatrix" in="HyN6vt" kernelMatrix="0 -1 0 -1 5 -1 0 -1 0" result="tTZHfY"/><feComposite id="SvgjsFeComposite1864" filtername="feComposite" in="SourceGraphic" in2="tTZHfY" operator="in" result="gAuK3e"/><feComposite id="SvgjsFeComposite1865" filtername="feComposite" in="gAuK3e" in2="gAuK3e" operator="over" result="CvTrwW"/></filter><filter xmlns="http://www.w3.org/2000/svg" id="crosshatching-sideshuffle"><feImage id="SvgjsFeImage1868" cellheight="50" cellwidth="1" dx="6" dy="50" filtername="feImage" href="#G79Oyy0V" patterntype="grid" result="4YBZ9R" rotation="115" sx="0" sy="0" type="turbulence" unitrot="0" unittype="square"><animate id="SvgjsAnimate1869" attributeName="sx" dur="0.5" values="1;4;1" attributeType="XML" repeatCount="indefinite"/></feImage><feImage id="SvgjsFeImage1870" cellheight="50" cellwidth="1" dx="6" dy="50" filtername="feImage" href="#YgXjnwUC" patterntype="grid" result="yITyeQ" rotation="70" sx="0" sy="0" type="turbulence" unitrot="0" unittype="square"/><feComposite id="SvgjsFeComposite1871" filtername="feComposite" in="yITyeQ" in2="4YBZ9R" operator="over" result="ppWoID"/><feComposite id="SvgjsFeComposite1872" filtername="feComposite" in="SourceGraphic" in2="ppWoID" operator="in" result="6FzKUP"/></filter><filter xmlns="http://www.w3.org/2000/svg" id="pen-wiggly"><feTurbulence id="SvgjsFeTurbulence2058" baseFrequency="0.1 0.1" filtername="feTurbulence" numOctaves="1" result="2clDB1" seed="0" stitchTiles="noStitch" type="turbulence" animation="{&quot;baseFrequency&quot;:&quot;{\&quot;attributeName\&quot;:\&quot;baseFrequency\&quot;,\&quot;dur\&quot;:\&quot;9\&quot;,\&quot;values\&quot;:\&quot;0.108 0.092;0.048 0.053;0.1 0.1\&quot;}&quot;}"><animate attributeName="baseFrequency" dur="9" values="0.108 0.092;0.048 0.053;0.1 0.1" attributeType="XML" repeatCount="indefinite"/></feTurbulence><feDisplacementMap id="SvgjsFeDisplacementMap2060" filtername="feDisplacementMap" in="SourceGraphic" in2="2clDB1" result="1Pf3G7" scale="3" xChannelSelector="R" yChannelSelector="G"/></filter><g id="[[filtered.ink-color-palette-data]]"><g id="0-0-none"/><g id="0-1-none"/><g id="0-2-none"/><g id="1-0-none"/><g id="1-1-none"/><g id="1-2-none"/><g id="2-0-none"/><g id="2-1-none"/><g id="2-2-none"/><g id="3-0-none"/><g id="3-1-none"/><g id="3-2-none"/><g id="4-0-none"/><g id="4-1-none"/><g id="4-2-none"/><g id="5-0-none"/><g id="5-1-none"/><g id="5-2-none"/><g id="6-0-none"/><g id="6-1-none"/><g id="6-2-none"/><g id="7-0-none"/><g id="7-1-none"/><g id="7-2-none"/><g id="8-0-none"/><g id="8-1-none"/><g id="8-2-none"/><g id="9-0-none"/><g id="9-1-none"/><g id="9-2-none"/></g><g id="[[filtered.ink-waypoint-data]]"/><g id="[[filtered.ink-sensitivity-data]]" zoom="1" pan="1"/><script>(() => {
    let parallaxOn = false;
    let viewbox = "0 0 1191 927";
    const svg = document.getElementById('main-canvas');
    svg.setAttribute('viewBox', viewbox);
    const layersGroup = document.getElementById('sketchGroup');
    const layersContainer = document.createElementNS('http://www.w3.org/2000/svg', 'g');
    layersContainer.id = 'layers-container';
    layersContainer.appendChild(layersGroup);
    svg.appendChild(layersContainer);
    /** @type {SVGGElement[]} */
    const layers = Array.from(layersGroup.children);

    const imageElement = document.getElementById("portal-preview-transition");
    svg.insertBefore(imageElement, layersContainer.nextSibling);

    const multiTrue = (bools) => bools.every(bool => bool);
    const ternary = (cond, a, b) => { if(cond){ return a } else { return b } };

    const layersSeparatedTransforms = layers.map(layer => {
        const rawstr = layer.getAttribute('separatedTransform');
        if(rawstr === null || rawstr === undefined){
            return {
                baseTranslate: [0, 0],
                baseScale: [1, 1],
                parallaxTranslate: [0, 0],
                parallaxScale: [1, 1]
            };
        }

        const nums = rawstr.split(',').map(parseFloat);
        return {
            baseTranslate: [nums[0], nums[1]],
            baseScale: [nums[2], nums[3]],
            parallaxTranslate: [nums[4], nums[5]],
            parallaxScale: [nums[6], nums[7]]
        };
    });

    let position = [0, 0];
    let rotation = 0;
    let depth = ternary(parallaxOn, 0, 1);
    let focalLength = 100;

    depth = 1;
    position = [0,0];

    let zoomSensitivity = 1;
    let panSensitivity = 1;

    let portalTransitioning = false
    let depthToTeleportationMap = {}
    let waypoints = []
    let rawWaypointData = [...document.getElementById("[[filtered.ink-waypoint-data]]").children].map(child => child.id)
    let patterns = document.querySelector('defs').childNodes
    for (const [index, w] of rawWaypointData.entries()) {
        const args = w.split('==');
        const waypoint = JSON.parse(args[2])
        if (patterns[index+1].id === waypoint.id) {
            waypoint.url = patterns[index+1].childNodes[0].href.baseVal
        }
        waypoints.push(waypoint)
    }

    let leftMouseDown = false;
    let middleMouseDown = false;

    let lastZoomEvent = null;
    let lastMouseMoveEvent = null;

    let zoomConstant = 0.95
    let zoomVelocity = 0;
    let speedFactor = 0.4;
    let addVelocity = 0.8 * speedFactor;
    let maxVelocity = 5 * speedFactor;
    let deaccelConst = 0.3 * speedFactor;

    let prevFrameX, prevFrameY;

    // ****************************************
    // ZOOM AND PAN LOGIC
    // ****************************************

    const canvasZoom = (zoomDir, useMouseLocation, e, useFactor, factor) => {
        if(useMouseLocation === undefined) useMouseLocation = false;
        if(useFactor === undefined) useFactor = false;
        if(factor === undefined) factor = 0;

        let rect = svg.getBoundingClientRect()
        if(portalTransitioning || checkIfPortalTriggeredViaCanvasBbox(e, rect)) return
        if(parallaxOn){
            let flip = -1;
            let zf = ternary(zoomDir > 0, -zoomConstant, zoomConstant) * flip;

            let oldDepth = depth
            if(!useFactor) depth += zf;
            else depth += Math.sign(zf) * factor;

            // additional check for parallax (handles edge cases where going beyond depth toggles visibility of layer off, so bbox check w/ canvas doesn't work)
            let depthInRange = getNumberInRange(Object.keys(depthToTeleportationMap), oldDepth / 5, depth / 5)
            if (depthInRange) {
                let teleports = depthToTeleportationMap[depthInRange]
                for (let i = 0; teleports.length > i; i++) {
                    if (isMouseInsideDiv(e.clientX, e.clientY, teleports[i]["portalID"])) {
                        let waypoint = waypointModeMatchesLayerMode(teleports[i]["waypointID"])
                        if (waypoint) {
                            const moveableDivBBox = document.getElementById(teleports[i]["portalID"]+"-preview").getBoundingClientRect()
                            const portalTransition = document.getElementById("portal-preview-transition")
                            animatePortalTransition(portalTransition, moveableDivBBox, rect, waypoint)
                            waitMilliseconds(250, () => {
                                layersGroup.style.opacity = 1
                                handleWaypointClick(waypoint)
                                portalTransition.style.display = "none"
                                portalTransition.setAttribute("href", "")
                                portalTransitioning = false
                                return
                            })
                        }
                    }
                }
            }
            
            let zoomLocationX = Math.round(e.clientX - rect.left) - rect.width / 2;
            let zoomLocationY = Math.round(e.clientY - rect.top) - rect.height / 2;

            // factor in rotation while zooming ("fake it" by rotating zoom location!)
            let newZoomLocation = rotatePoint([zoomLocationX, zoomLocationY], -rotation);
            zoomLocationX = newZoomLocation[0];
            zoomLocationY = newZoomLocation[1];

            let sign = Math.sign(zf) * -1;
            if(!useFactor) {
                position[0] += sign * zoomLocationX * 0.1;
                position[1] += sign * zoomLocationY * 0.1;
            } else {
                let finalFactor = (0.1 / 0.95) * factor; // I don't remember where this constant comes from...
                position[0] += sign * zoomLocationX * finalFactor;
                position[1] += sign * zoomLocationY * finalFactor;
            }
            
            canvasDrawAlternativeParallax();
        }

        else {

            let Mx = Math.round(e.clientX - rect.left) - rect.width / 2 + 1;
            let My = Math.round(e.clientY - rect.top) - rect.height / 2 + 1;

            let rotated_M = rotatePoint([Mx, My], -rotation);
            Mx = rotated_M[0];
            My = rotated_M[1];

            const dS = (1 + factor * Math.sign(zoomDir) * 0.05);
            let Sx = depth * rect.width;
            let Sy = depth * rect.height;
            depth *= dS 

            let Lxept = position[0] - Sx / 2;
            let Rxept = position[0] + Sx / 2;
            let ax1 = Mx - Lxept;
            let ax2 = Rxept - Mx;
            let bx1 = ax1 * dS;
            let bx2 = ax2 * dS;
            let Lxpept = Mx - bx1;
            let Rxpept = Mx + bx2;
            let tpx = (Lxpept + Rxpept) / 2;
            position[0] = tpx;

            let Lyept = position[1] - Sy / 2;
            let Ryept = position[1] + Sy / 2;
            let ay1 = My - Lyept;
            let ay2 = Ryept - My;
            let by1 = ay1 * dS;
            let by2 = ay2 * dS;
            let Lypept = My - by1;
            let Rypept = My + by2;
            let tpy = (Lypept + Rypept) / 2;
            position[1] = tpy;
            
            canvasDrawNoParallax();
        }
    }

    const canvasPan = (e) => {
        let offsetX = (e.clientX - prevFrameX) * (parallaxOn ? 1.5 : 1);
        let offsetY = (e.clientY - prevFrameY) * (parallaxOn ? 1.5 : 1);

        if(parallaxOn){
            offsetX *= panSensitivity;
            offsetY *= panSensitivity;
        }

        // factor in rotation while panning ("fake it" by rotating offsets!)
        let newOffsets = rotatePoint([offsetX, offsetY], -rotation);
        offsetX = newOffsets[0];
        offsetY = newOffsets[1];

        const factor = ternary(parallaxOn, 1, 1);
        position[0] += offsetX * factor;
        position[1] += offsetY * factor;

        prevFrameX = e.clientX || 0
        prevFrameY = e.clientY || 0
        
        if(parallaxOn){
            canvasDrawAlternativeParallax();
        } else {
            canvasDrawNoParallax();
        }
    }

    const canvasRotate = (e) => {
        let offsetX = e.clientX - prevFrameX;
        prevFrameX = e.clientX || 0;
        let dRot = offsetX / 4; // TODO: can tune...
        rotation += dRot;

        if(parallaxOn){
            canvasDrawAlternativeParallax();
        } else {
            canvasDrawNoParallax();
        }
    }
    
    const canvasDrawAlternativeParallax = () => {
        const x = position[0], y = position[1];
        let maxDepth = Infinity;

        for (let i = 0; layers.length > i ; i ++) {
            let currLayer = layers[i]
            let curDepth = parseFloat(currLayer.getAttribute('depth'));
            let distance = curDepth * 50 - depth * zoomSensitivity * 10;
            if(multiTrue([distance > 0, maxDepth > distance])){
                maxDepth = distance;
            }
            if(0 > distance){ // layer behind camera, hide it
                currLayer.style.display = 'none';
            } 

            else {
                if(currLayer.style.display === 'none') currLayer.style.display = 'block';

                let proj_x = focalLength / distance * x * zoomSensitivity;
                let proj_y = focalLength / distance * y * zoomSensitivity;
                let scaleFac = focalLength / distance;
                
                setParallax(i, [proj_x, proj_y], [scaleFac, scaleFac]);
            }
        }
    }

    const setParallax = (layerIndex, parallaxTranslate, parallaxScale) => {
        let baseTranslate = layersSeparatedTransforms[layerIndex].baseTranslate;
        let baseScale = layersSeparatedTransforms[layerIndex].baseScale;

        const matrix = mat_compose([
            mat_ccwrotate(rotation * Math.PI / 180),
            mat_translate(parallaxTranslate[0], parallaxTranslate[1]),
            mat_scale(parallaxScale[0], parallaxScale[1]),
            mat_translate(baseTranslate[0], baseTranslate[1]),
            mat_scale(baseScale[0], baseScale[1]),
        ]);

        const matrixAttribute = 'matrix(' + 
            matrix[0][0] + ' ' + matrix[1][0] + ' ' + matrix[0][1] + ' ' +
            matrix[1][1] + ' ' + matrix[0][2] + ' ' + matrix[1][2] + ')';
        layers[layerIndex].setAttribute('transform', matrixAttribute);
    }

    const canvasDrawNoParallax = () => {
        for (let i = 0; layers.length > i ; i ++) {
            let baseTranslate = layersSeparatedTransforms[i].baseTranslate;
            let baseScale = layersSeparatedTransforms[i].baseScale;

            const matrix = mat_compose([
                mat_ccwrotate(rotation * Math.PI / 180),
                mat_translate(position[0], position[1]),
                mat_scale(depth, depth),

                mat_translate(baseTranslate[0], baseTranslate[1]),
                mat_scale(baseScale[0], baseScale[1]),
            ]);

            const matrixAttribute = 'matrix(' + 
                matrix[0][0] + ' ' + matrix[1][0] + ' ' + matrix[0][1] + ' ' +
                matrix[1][1] + ' ' + matrix[0][2] + ' ' + matrix[1][2] + ')';
            layers[i].setAttribute('transform', matrixAttribute);
        }
    }

    // ****************************************
    // UTIL FOR PORTAL CALCULATION
    // ****************************************

    const checkIfPortalTriggeredViaCanvasBbox = (e, canvasBbox) => {
        for (const key in depthToTeleportationMap) {
            const teleports = depthToTeleportationMap[key];
            for (let i = 0; teleports.length > i; i++) {
                if (multiTrue([isDivBeyondCanvas(teleports[i]["portalID"], canvasBbox), isMouseInsideDiv(e.clientX, e.clientY, teleports[i]["portalID"])])) {
                    let waypoint = waypointModeMatchesLayerMode(teleports[i]["waypointID"])
                    if (waypoint) {
                        const moveableDivBBox = document.getElementById(teleports[i]["portalID"]+"-preview").getBoundingClientRect()
                        const portalTransition = document.getElementById("portal-preview-transition")
                        animatePortalTransition(portalTransition, moveableDivBBox, canvasBbox, waypoint)
                        waitMilliseconds(250, () => {
                            layersGroup.style.opacity = 1
                            handleWaypointClick(waypoint)
                            portalTransition.style.display = "none"
                            portalTransition.setAttribute("href", "")
                            portalTransitioning = false
                            return true
                        })
                    }
                }
            }
        }
        return false
    }

    const animatePortalTransition = (portalTransition, moveableDivBBox, canvasBbox, waypoint) => {
        const portalTransitionStyle = portalTransition.style
        portalTransitionStyle.display = "block"
        portalTransition.setAttribute("href", waypoint.url)
        layersGroup.style.opacity = 0
        let ogViewboxList = viewbox.split(" ").map(parseFloat);
        portalTransitionStyle.x = (ogViewboxList[0] + (moveableDivBBox.left - canvasBbox.left) / (canvasBbox.width / ogViewboxList[2]))+"px"
        portalTransitionStyle.y = (ogViewboxList[1] + (moveableDivBBox.top - canvasBbox.top) / (canvasBbox.height / ogViewboxList[3]))+"px"
        portalTransitionStyle.width = (moveableDivBBox.width)+"px"
        portalTransitionStyle.height = (moveableDivBBox.height)+"px"

        portalTransitioning = true
        waitMilliseconds(1, () => {
            let viewboxList = waypoint.viewboxString.split(" ").map(parseFloat);
            portalTransitionStyle.transition = "all 0.25s ease"
            portalTransitionStyle.x = (-(viewboxList[2] - ogViewboxList[2])/2)+"px"
            portalTransitionStyle.y = (-(viewboxList[3] - ogViewboxList[3])/2)+"px"
            portalTransitionStyle.width = viewboxList[2]+"px"
            portalTransitionStyle.height = viewboxList[3]+"px"
        })
    }

    const waypointModeMatchesLayerMode = (waypointID) => {
        let index = waypoints.findIndex(function (w) { return w.id === waypointID })
        let waypoint = waypoints[index]
        if (parallaxOn === waypoint.parallaxIsOn) { return waypoint }
        else { return false }
    }

    const handleWaypointClick = (waypoint) => {
        if (parallaxOn === waypoint.parallaxIsOn) {
            depth = waypoint.depth
            position = [waypoint.posX, waypoint.posY]
            if (parallaxOn) { canvasDrawAlternativeParallax() }
            else { canvasDrawNoParallax() }
            return true
        }
        else { return false }
    }

    const getNumberInRange = (numbers, x, y) => {
        for (const num of numbers) {
          if (multiTrue([num >= x, y >= num])) { return num }
        }
        return false
    }

    const isMouseInsideDiv = (x, y, divID) => {
        const divElement = document.getElementById(divID)
        if (divElement) {
            const divRect = divElement.getBoundingClientRect()
            if (multiTrue([x >= divRect.left, divRect.right >= x, y >= divRect.top, divRect.bottom >= y])
            ) { return true }
            else { return false }
        }
        else { return false }
    }

    const isDivBeyondCanvas = (divID, canvasRect) => {
        const divElement = document.getElementById(divID + String.fromCharCode(45) + "preview");
        if (divElement) {
            const divRect = divElement.getBoundingClientRect();
            if (
                multiTrue([canvasRect.top >= divRect.top, divRect.bottom >= canvasRect.bottom,
                canvasRect.left >= divRect.left, divRect.right >= canvasRect.right])
            ) { return true; } 
            else { return false; }
        } else { return false; }
    };
    

    const waitMilliseconds = (millisecs, f) => {
        setTimeout(function() {
          f()
        }, millisecs);
    }

    // ****************************************
    // MATRIX MATH
    // ****************************************

    const mat_identity = () => [[1, 0, 0],[0, 1, 0],[0, 0, 1]];
    const mat_mul = (a, b) => [
        [a[0][0]*b[0][0] + a[0][1]*b[1][0] + a[0][2]*b[2][0], a[0][0]*b[0][1] + a[0][1]*b[1][1] + a[0][2]*b[2][1], a[0][0]*b[0][2] + a[0][1]*b[1][2] + a[0][2]*b[2][2]], 
        [a[1][0]*b[0][0] + a[1][1]*b[1][0] + a[1][2]*b[2][0], a[1][0]*b[0][1] + a[1][1]*b[1][1] + a[1][2]*b[2][1], a[1][0]*b[0][2] + a[1][1]*b[1][2] + a[1][2]*b[2][2]],
        [a[2][0]*b[0][0] + a[2][1]*b[1][0] + a[2][2]*b[2][0], a[2][0]*b[0][1] + a[2][1]*b[1][1] + a[2][2]*b[2][1], a[2][0]*b[0][2] + a[2][1]*b[1][2] + a[2][2]*b[2][2]]
    ];
    const mat_compose = (matrices) => {
        if(matrices.length === 0) matrices = [mat_identity()];
        let mat = matrices[matrices.length - 1];
        for(let i = matrices.length - 2; i >= 0; i--) mat = mat_mul(matrices[i], mat);
        return mat;
    }
    const mat_translate = (x, y) => [[1, 0, x],[0, 1, y],[0, 0, 1]];
    const mat_scale = (sx, sy) => {
        if(sy === undefined) sy = sx;
        return [[sx, 0, 0],[0, sy, 0],[0, 0, 1]];
    }
    const mat_ccwrotate = (theta) => [[Math.cos(theta), -Math.sin(theta), 0],[Math.sin(theta), Math.cos(theta), 0],[0, 0, 1]];

    const rotatePoint = (point, degrees) => {
        const theta = degrees * Math.PI / 180;
        return [
            point[0] * Math.cos(theta) - point[1] * Math.sin(theta),
            point[0] * Math.sin(theta) + point[1] * Math.cos(theta),
        ];
    }

    // ****************************************
    // INPUT AND LOGIC INITIALIZATION
    // ****************************************

    // eslint-disable-next-line no-use-before-define
    let frameCounter = 0; // eslint-disable-line no-use-before-define
    let firstFrame = true;
    const runOnFirstFrame = () => {
        if(parallaxOn){
            canvasDrawAlternativeParallax();
        } else {
            canvasDrawNoParallax();
        }
    }
    const renderFrame = () => {
        if(zoomVelocity > maxVelocity) zoomVelocity = maxVelocity;
        if(0 > zoomVelocity) zoomVelocity = 0;
        if(multiTrue([lastMouseMoveEvent, lastZoomEvent, zoomVelocity !== 0])) {
            const e1 = lastZoomEvent;
            const e2 = lastMouseMoveEvent;
            canvasZoom(-e1.deltaY, true, e2, true, zoomVelocity);
            zoomVelocity -= deaccelConst;
        }

        if(firstFrame){
            runOnFirstFrame();
            firstFrame = false;
        }

        frameCounter += 1;
    }

    const maxFrameRate = 30;
    let previousTime = new Date().getTime();
    const renderLoop = () => {
        let newTime = new Date().getTime();
        if(1000 / maxFrameRate > newTime - previousTime){
            // skip frame
        } else {
            renderFrame();
            previousTime = newTime;
        }
        
        window.requestAnimationFrame(renderLoop);
    }
    renderLoop();

    document.addEventListener('mousedown', (event) => {
        if(event.button === 0) leftMouseDown = true;
        else if(event.button === 1) {
            event.preventDefault();
            middleMouseDown = true;
        }
        prevFrameX = event.clientX;
        prevFrameY = event.clientY;
    });

    document.addEventListener('mousemove', (event) => {
        lastMouseMoveEvent = event;
        if(leftMouseDown) canvasPan(event);
        else if(middleMouseDown) {
            event.preventDefault();
            canvasRotate(event);
        }
    });

    document.addEventListener('mouseleave', () => {
        leftMouseDown = false;
        middleMouseDown = false;
    });
    document.addEventListener('mouseup', (event) => {
        if(event.button === 0) leftMouseDown = false;
        else if(event.button === 1) middleMouseDown = false;
    });

    document.addEventListener('wheel', (event) => {
        event.preventDefault();
        lastZoomEvent = event
        lastMouseMoveEvent = event
        zoomVelocity += addVelocity
    }, {passive: false});
})()</script></svg>